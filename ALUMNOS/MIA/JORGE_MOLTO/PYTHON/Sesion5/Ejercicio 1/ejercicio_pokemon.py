# -*- coding: utf-8 -*-
"""ejercicio_pokemon

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1eHBWNRlDAJDdJZGMKxSSEbZLRYaxC7Un
"""

import numpy as np

import pandas as pd
data = pd.read_csv("pokemon_data.csv")

data.head()

print(data)

data.head(5)

data.tail(5)

data.columns

data["Name"]

data[["Name","Speed"]]

data.iloc[0:5:1]

data.iloc[0::1]

data.iloc[100:150:1]

data.iloc[10]["Name"]

for index, row in data.iterrows():
    print(f"Índice: {index}, Nombre: {row['Name']}")

data.columns

data[data["Type 1"] == "WATER"]

data.describe()

data.sort_values(by=["Name"], ascending = True)

data["Total"] = data['HP'] + data["Attack"] + data["Defense"] + data["Speed"]

data.drop(columns= ("Total"))

data[((data["Type 1"] == "Grass") & (data["Type 2"] == "Poison"))]

data[((data["Type 1"] == "Fire") | (data["Type 1"] == "Poison"))]

data[((data["Type 1"] == "Grass") & (data["Type 2"] == "Poison") & (data["HP"] >= 70))]

data[data["Name"] == "Mega"]

data[data["Name"] != "Mega"]

data[data.Name.str.contains('Mega')]

data["Type 1"] = data["Type 1"].replace("Fire", "Flame")

data["Type 1"] = data["Type 1"].replace("Flame", "Fire")

data.loc[data["Legendary"], "Type 1"] = "Fire"

data[data["Legendary"]]

data.groupby(["Type 1"])["Defense"].agg(Defense_Media="mean").sort_values("Defense_Media")

data.groupby(["Type 1"])["Attack"].agg(Attack_Media="mean").sort_values("Attack_Media")

data.groupby(["Type 1"])["HP"].agg(HP_Media="mean").sort_values("HP_Media")

data.groupby(["Type 1"])[["Defense", "HP", "Attack", "Sp. Atk", "Sp. Def", "Speed"]].agg("sum")

data.groupby("Type 1").agg(Recuento=('Type 1', 'count'))

data.groupby(["Type 1", "Type 2"]).agg(Recuento=('Type 1', 'count'))

# Supongamos que tienes el DataFrame `df` cargado
chunksize = 5  # tamaño del chunk

# Dividir el DataFrame en chunks de tamaño 5
chunks = np.array_split(data, len(data) // chunksize + 1)

# Iterar sobre cada chunk e imprimirlo
for chunk in chunks:
    print(chunk)

chunksize = 5  # tamaño del chunk

# Iterar por el DataFrame en trozos de 5 filas
for i in range(0, len(data), chunksize):
    chunk = data.iloc[i:i+chunksize]
    print(chunk)

